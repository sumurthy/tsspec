{
  "kind": "package",
  "summary": [],
  "remarks": [],
  "exports": {
    "BaseFieldCustomizer": {
      "kind": "class",
      "extends": "BaseExtension",
      "implements": "",
      "typeParameters": [
        "TProperties"
      ],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "This is the base class that third parties should extend when implementing a client-side extension that customizes the appearance of fields in a SharePoint ListView. In the component manifest, the \"extensionType\" should be set to \"FieldCustomizer\"."
        }
      ],
      "remarks": [],
      "isBeta": true,
      "members": {
        "context": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "FieldCustomizerContext",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Use context object to access common services and state associated with the component."
            }
          ],
          "remarks": [
            {
              "kind": "textDocElement",
              "value": "Child classes are expected to override this field by redeclaring it with a specialized type. It is meant to be a read-only property; the type cannot be declared as read-only in the base class (because it is initialized outside the constructor), but child classes should redeclare it as readonly."
            }
          ],
          "isBeta": false
        },
        "onDisposeCell": {
          "kind": "method",
          "signature": "@virtual public onDisposeCell(event: IFieldCustomizerCellEventParameters): void;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "onRenderCell": {
          "kind": "method",
          "signature": "@virtual public onRenderCell(event: IFieldCustomizerCellEventParameters): void;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "BaseListViewCommandSet": {
      "kind": "class",
      "extends": "BaseExtension",
      "implements": "",
      "typeParameters": [
        "TProperties"
      ],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "This is the base class that third parties should extend when implementing a client-side extension that provides a command set for a SharePoint list view. In the component manifest, the \"extensionType\" should be set to \"ListViewCommandSet\"."
        }
      ],
      "remarks": [],
      "isBeta": true,
      "members": {
        "context": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ListViewCommandSetContext",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Use context object to access common services and state associated with the component."
            }
          ],
          "remarks": [
            {
              "kind": "textDocElement",
              "value": "Child classes are expected to override this field by redeclaring it with a specialized type. It is meant to be a read-only property; the type cannot be declared as read-only in the base class (because it is initialized outside the constructor), but child classes should redeclare it as readonly."
            }
          ],
          "isBeta": false
        },
        "onExecute": {
          "kind": "method",
          "signature": "@virtual public onExecute(event: IListViewCommandSetExecuteEventParameters): void;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "This event occurs when the command is invoked, e.g. because the user clicked on the toolbar button or menu item."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "onRefreshCommand": {
          "kind": "method",
          "signature": "@virtual public onRefreshCommand(event: IListViewCommandSetRefreshEventParameters): void;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "This event occurs whenever the ListView state changes. It allows the implementor to tailor the appearance of the command. For example, to hide the command, assign event.visible = false. To customize the title, assign event.tile."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "CellFormatter": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "This class provides some functions that facilitate formatting cell values."
        }
      ],
      "remarks": [],
      "isBeta": true,
      "members": {
        "renderAsText": {
          "kind": "method",
          "signature": "public static renderAsText(column: ColumnAccessor, cellValue: any): string;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": true,
          "returnValue": {
            "type": "string",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Renders the specified cell value as a text string without any markup."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "ColumnAccessor": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "Provides access to a ListView column, which is the visual presentation of a field."
        }
      ],
      "remarks": [
        {
          "kind": "textDocElement",
          "value": "A SharePoint \"field\" (SPField) defines the data storage for a property of a list item. (If the list item represents a document, then the field is sometimes called a \"property\".) A \"column\" is the visual presentation of a field, when displayed by the ListView."
        }
      ],
      "isBeta": true,
      "members": {
        "field": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "SPField",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "The server-side definition of the field. This property is read-only."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "visible": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Whether to show this column in the list view. This property is read-only."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "FieldCustomizerContext": {
      "kind": "class",
      "extends": "ExtensionContext",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "This object provides contextual information for BaseFieldCustomizer."
        }
      ],
      "remarks": [],
      "isBeta": true,
      "members": {
        "column": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "ColumnAccessor",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Provides access to the column that the customizer will operate on."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "field": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "SPField",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Provides access to the SharePoint field that the customizer will operate on."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "listView": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "ListViewAccessor",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Provides access to the ListView control that the customizer will operate on."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "pageContext": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "PageContext",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "The page context provides standard definitions for common SharePoint objects that need to be shared between the client-side application, web parts, and other components."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "IFieldCustomizerCellEventParameters": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "Event parmeters for BaseFieldCustomizer.onRenderCell()"
        }
      ],
      "remarks": [],
      "isBeta": true,
      "members": {
        "cellDiv": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "HTMLDivElement",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "The HTML \"div\" element that the extension will take ownership of. This ownership will end when onDisposeCell() is called."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "cellStorage": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "any",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "An implementor-defined storage property."
            }
          ],
          "remarks": [
            {
              "kind": "textDocElement",
              "value": "For example, suppose that resources need to be allocated during rendering (e.g. a renderer object, an HTTP request to be canceled, a cache slot, etc). The onRenderCell() implementation could store a key or handle in this property, and then onDisposeCell() can use this key to find the resource to be freed."
            }
          ],
          "isBeta": false
        },
        "cellValue": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "any",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "The value of the field being rendered."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "row": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "RowAccessor",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "The row being rendered."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "IListViewCommandSetExecuteEventParameters": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [],
      "remarks": [],
      "isBeta": true,
      "members": {
        "commandId": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "The unique identifier for the command. This is specified as ICommandDefinition.commandId in the component manifest."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "selectedRows": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ReadonlyArray<RowAccessor>",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "The currently selected ListView rows, at the time when the event occurred."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "IListViewCommandSetRefreshEventParameters": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [],
      "remarks": [],
      "isBeta": true,
      "members": {
        "ariaLabel": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "To customize the ARIA label for the command, the onShowing() handler can assign a different value to this property. Otherwise, it will be the ICommandDefinition.ariaLabel as declared in the component manifest."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "commandId": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "The unique identifier for the command. This is specified as ICommandDefinition.commandId in the component manifest."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "selectedRows": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ReadonlyArray<RowAccessor>",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "The currently selected ListView rows, at the time when the event occurred."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "title": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "To customize the displayed title of the command, the onShowing() handler can assign a different value to this property. Otherwise, it will be the ICommandDefinition.title as declared in the component manifest."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "visible": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Specifies whether the command is displayed or not. To avoid showing the command, the onShowing() handler can assign false to this property."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "ListViewAccessor": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "Provides access to a SharePoint ListView control."
        }
      ],
      "remarks": [],
      "isBeta": true,
      "members": {
        "columns": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "ReadonlyArray<ColumnAccessor>",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "The columns in associated with this view, including hidden columns."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "ListViewCommandSetContext": {
      "kind": "class",
      "extends": "ExtensionContext",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "This object provides contextual information for BaseListViewCommandSet."
        }
      ],
      "remarks": [],
      "isBeta": true,
      "members": {
        "listView": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "ListViewAccessor",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Provides access to the ListView control that the customizer will operate on."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "manifest": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "ICommandSetExtensionManifest",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "pageContext": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "PageContext",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "The page context provides standard definitions for common SharePoint objects that need to be shared between the client-side application, web parts, and other components."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "RowAccessor": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "Provides access to a ListView row, which is the visual presentation of a SharePoint list item."
        }
      ],
      "remarks": [
        {
          "kind": "textDocElement",
          "value": "A SharePoint \"list item\" (SPListItem) is a data storage record in the content management system; it stores an array of values for the associated fields. A \"row\" is the visual presentation of a list item, when displayed by the ListView; it stores an array of cell values for the associated columns."
        }
      ],
      "isBeta": true,
      "members": {
        "getValue": {
          "kind": "method",
          "signature": "public abstract getValue(column: ColumnAccessor): any;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "any",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Retrieves the cell value for the specified column. The value will be a primitive JavaScript object such as a string, number, etc."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "getValueByName": {
          "kind": "method",
          "signature": "public abstract getValueByName(internalName: string): any;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "any",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Retrieves the cell value for the column/field with the specified internal name. The value will be a primitive JavaScript object such as a string, number, etc."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    }
  }
}
