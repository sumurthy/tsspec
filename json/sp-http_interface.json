{
  "IHttpClientConfiguration": {
    "isBeta": false,
    "implementsExtendsName": "",
    "genericType": "",
    "descr": "Flags interface for HttpClientConfiguration.",
    "remarks": null,
    "properties": {
      "consoleLogging": {
        "descr": "Specifies whether HttpClient should log each request to the debugger console.",
        "remarks": null,
        "dataType": "boolean",
        "isOptional": true,
        "readonly": false,
        "accessModifier": "public",
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null
      }
    },
    "functions": {},
    "methods": {},
    "constructor": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  },
  "IHttpClientOptions": {
    "isBeta": false,
    "implementsExtendsName": "",
    "genericType": "",
    "descr": "This interface defines the options for the HttpClient operations such as get(), post(), fetch(), etc. It is based on the whatwg API standard parameters that are documented here: https://fetch.spec.whatwg.org/",
    "remarks": null,
    "properties": {},
    "functions": {},
    "methods": {},
    "constructor": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  },
  "ISPHttpClientCommonConfiguration": {
    "isBeta": false,
    "implementsExtendsName": "",
    "genericType": "",
    "descr": "Flags interface for SPHttpClientCommonConfiguration",
    "remarks": null,
    "properties": {
      "jsonRequest": {
        "descr": "When this switch is true: If the 'Content-Type' header was not explicitly added for the request, then SPHttpClient will add it if the request is a write operation (i.e. an HTTP method other than 'GET', 'HEAD', or 'OPTIONS'). For OData 3.0, the value is 'application/json;odata=verbose;charset=utf-8'. For OData 4.0, the value is 'application/json;charset=utf-8'.",
        "remarks": null,
        "dataType": "boolean",
        "isOptional": true,
        "readonly": false,
        "accessModifier": "public",
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null
      },
      "jsonResponse": {
        "descr": "When this switch is true: If the 'Accept' header was not explicitly added for the request, then SPHttpClient will add it. For OData 3.0, the value is 'application/json'. For OData 4.0, the value is 'application/json;odata.metadata=minimal'.",
        "remarks": null,
        "dataType": "boolean",
        "isOptional": true,
        "readonly": false,
        "accessModifier": "public",
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null
      }
    },
    "functions": {},
    "methods": {},
    "constructor": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  },
  "ISPHttpClientConfiguration": {
    "isBeta": false,
    "implementsExtendsName": "",
    "genericType": "",
    "descr": "Flags interface for SPHttpClientConfiguration.",
    "remarks": null,
    "properties": {
      "defaultODataVersion": {
        "descr": "When this switch is specified (i.e. not undefined): If the 'OData-Version' header was not explictly added for the request, then SPHttpClient will add the header to specify the version indicated by defaultODataVersion. NOTE: Without an 'OData-Version' header, the SharePoint server currently defaults to Version 3.0 in most cases. The recommended version is 4.0.",
        "remarks": null,
        "dataType": "ODataVersion",
        "isOptional": true,
        "readonly": false,
        "accessModifier": "public",
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null
      },
      "defaultSameOriginCredentials": {
        "descr": "When this switch is true: If RequestInit.credentials is not explicitly specified for the request, then SPHttpClient will assign it to be 'same-origin'. Without this switch, different web browsers may apply different defaults. For more information, see the spec: https://fetch.spec.whatwg.org/#cors-protocol-and-credentials",
        "remarks": null,
        "dataType": "boolean",
        "isOptional": true,
        "readonly": false,
        "accessModifier": "public",
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null
      },
      "requestDigest": {
        "descr": "When this switch is true: If the 'X-RequestDigest' header was not explicitly added for the request, then SPHttpClient will add it if the request is a write operation (i.e. an HTTP method other than 'GET', 'HEAD', or 'OPTIONS'). The request digest is managed by the DigestCache service. In the case of a cache miss, an additional network request may be performed.",
        "remarks": null,
        "dataType": "boolean",
        "isOptional": true,
        "readonly": false,
        "accessModifier": "public",
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null
      }
    },
    "functions": {},
    "methods": {},
    "constructor": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  },
  "ISPHttpClientOptions": {
    "isBeta": false,
    "implementsExtendsName": "",
    "genericType": "",
    "descr": "This interface defines the options for the SPHttpClient operations such as get(), post(), fetch(), etc. It is based on the WHATWG API standard parameters that are documented here: https://fetch.spec.whatwg.org/",
    "remarks": null,
    "properties": {
      "webUrl": {
        "descr": "For a write operation, SPHttpClient will automatically add the \"X-RequestDigest\" header, which may need to be fetched using a seperate request such as \"https://example.com/sites/sample/_api/contextinfo\". Typically the SPWeb URL (\"https://example.com/sites/sample\" in this example) can be guessed by looking for a reserved URL segment such as \"_api\" in the original REST query, however certain REST endpoints do not contain a reserved URL segment; in this case, the webUrl can be explicitly specified using this option.",
        "remarks": null,
        "dataType": "string",
        "isOptional": true,
        "readonly": false,
        "accessModifier": "public",
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null
      }
    },
    "functions": {},
    "methods": {},
    "constructor": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  }
}