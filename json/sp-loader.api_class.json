{
  "SPComponentLoader": {
    "isBeta": false,
    "implementsExtendsName": "",
    "genericType": "",
    "descr": "Component loader. Needs to be initialized with an implemented ISPComponentLoader.",
    "remarks": null,
    "properties": {},
    "functions": {},
    "methods": {
      "initialize-spcomponentloader": {
        "isBeta": false,
        "showBetaMessage": false,
        "descr": "Initializes the component loader with an implementation. Must be called once before it can be used.",
        "remarks": null,
        "accessModifier": "public",
        "signature": "public static initialize(componentLoader: ISPComponentLoader): void;",
        "isStatic": true,
        "isOptional": false,
        "genericType": null,
        "returnType": "void",
        "returnDescr": "",
        "params": [],
        "docName": "initialize()",
        "mdLink": "initialize"
      },
      "loadComponent-spcomponentloader": {
        "isBeta": false,
        "showBetaMessage": false,
        "descr": "Loads a component from a manifest.",
        "remarks": null,
        "accessModifier": "public",
        "signature": "public static loadComponent < TComponent >(manifest: IClientSideComponentManifest): Promise<TComponent>;",
        "isStatic": true,
        "isOptional": false,
        "genericType": null,
        "returnType": "Promise<TComponent>",
        "returnDescr": "A promise containing the loaded module.",
        "params": [
          {
            "name": "manifest",
            "descr": "Manifest of the module to load.",
            "isOptional": false,
            "dataType": "IClientSideComponentManifest"
          }
        ],
        "docName": "loadComponent(manifest)",
        "mdLink": "loadcomponentmanifest"
      },
      "loadCss-spcomponentloader": {
        "isBeta": false,
        "showBetaMessage": false,
        "descr": "Inserts a <link ... /> tag for a stylesheet.",
        "remarks": null,
        "accessModifier": "public",
        "signature": "public static loadCss(url: string): void;",
        "isStatic": true,
        "isOptional": false,
        "genericType": null,
        "returnType": "void",
        "returnDescr": "",
        "params": [
          {
            "name": "url",
            "descr": "The CSS file URL.",
            "isOptional": false,
            "dataType": "string"
          }
        ],
        "docName": "loadCss(url)",
        "mdLink": "loadcssurl"
      },
      "loadScript-spcomponentloader": {
        "isBeta": false,
        "showBetaMessage": false,
        "descr": "Given a URL, load a script.",
        "remarks": null,
        "accessModifier": "public",
        "signature": "public static loadScript < TModule >(url: string, options?: ILoadScriptOptions): Promise<TModule>;",
        "isStatic": true,
        "isOptional": false,
        "genericType": null,
        "returnType": "Promise<TModule>",
        "returnDescr": "A promise containing the loaded module.",
        "params": [
          {
            "name": "url",
            "descr": "The script URL.",
            "isOptional": false,
            "dataType": "string"
          },
          {
            "name": "options",
            "descr": "globalExportsName: If the script isn't an AMD module and loads a global member on the page, specify the global member's name.",
            "isOptional": true,
            "dataType": "ILoadScriptOptions"
          }
        ],
        "docName": "loadScript(url,options)",
        "mdLink": "loadscripturloptions"
      }
    },
    "constructor": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  }
}