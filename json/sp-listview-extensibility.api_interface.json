{
  "IFieldCustomizerCellEventParameters": {
    "isBeta": true,
    "implementsExtendsName": "",
    "genericType": "",
    "descr": "Event parmeters for BaseFieldCustomizer.onRenderCell()",
    "remarks": null,
    "properties": {
      "cellDiv": {
        "descr": "The HTML \"div\" element that the extension will take ownership of. This ownership will end when onDisposeCell() is called.",
        "remarks": null,
        "dataType": "HTMLDivElement",
        "isOptional": false,
        "readonly": false,
        "accessModifier": "public",
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null
      },
      "cellStorage": {
        "descr": "An implementor-defined storage property.",
        "remarks": "For example, suppose that resources need to be allocated during rendering (e.g. a renderer object, an HTTP request to be canceled, a cache slot, etc). The onRenderCell() implementation could store a key or handle in this property, and then onDisposeCell() can use this key to find the resource to be freed.",
        "dataType": "any",
        "isOptional": false,
        "readonly": false,
        "accessModifier": "public",
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null
      },
      "cellValue": {
        "descr": "The value of the field being rendered.",
        "remarks": null,
        "dataType": "any",
        "isOptional": false,
        "readonly": false,
        "accessModifier": "public",
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null
      },
      "row": {
        "descr": "The row being rendered.",
        "remarks": null,
        "dataType": "RowAccessor",
        "isOptional": false,
        "readonly": false,
        "accessModifier": "public",
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null
      }
    },
    "functions": {},
    "methods": {},
    "constructor": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  },
  "IListViewCommandSetExecuteEventParameters": {
    "isBeta": true,
    "implementsExtendsName": "",
    "genericType": "",
    "descr": "",
    "remarks": null,
    "properties": {
      "commandId": {
        "descr": "The unique identifier for the command. This is specified as ICommandDefinition.commandId in the component manifest.",
        "remarks": null,
        "dataType": "string",
        "isOptional": false,
        "readonly": false,
        "accessModifier": "public",
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null
      },
      "selectedRows": {
        "descr": "The currently selected ListView rows, at the time when the event occurred.",
        "remarks": null,
        "dataType": "ReadonlyArray<RowAccessor>",
        "isOptional": false,
        "readonly": false,
        "accessModifier": "public",
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null
      }
    },
    "functions": {},
    "methods": {},
    "constructor": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  },
  "IListViewCommandSetRefreshEventParameters": {
    "isBeta": true,
    "implementsExtendsName": "",
    "genericType": "",
    "descr": "",
    "remarks": null,
    "properties": {
      "ariaLabel": {
        "descr": "To customize the ARIA label for the command, the onShowing() handler can assign a different value to this property. Otherwise, it will be the ICommandDefinition.ariaLabel as declared in the component manifest.",
        "remarks": null,
        "dataType": "string",
        "isOptional": false,
        "readonly": false,
        "accessModifier": "public",
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null
      },
      "commandId": {
        "descr": "The unique identifier for the command. This is specified as ICommandDefinition.commandId in the component manifest.",
        "remarks": null,
        "dataType": "string",
        "isOptional": false,
        "readonly": false,
        "accessModifier": "public",
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null
      },
      "selectedRows": {
        "descr": "The currently selected ListView rows, at the time when the event occurred.",
        "remarks": null,
        "dataType": "ReadonlyArray<RowAccessor>",
        "isOptional": false,
        "readonly": false,
        "accessModifier": "public",
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null
      },
      "title": {
        "descr": "To customize the displayed title of the command, the onShowing() handler can assign a different value to this property. Otherwise, it will be the ICommandDefinition.title as declared in the component manifest.",
        "remarks": null,
        "dataType": "string",
        "isOptional": false,
        "readonly": false,
        "accessModifier": "public",
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null
      },
      "visible": {
        "descr": "Specifies whether the command is displayed or not. To avoid showing the command, the onShowing() handler can assign false to this property.",
        "remarks": null,
        "dataType": "boolean",
        "isOptional": false,
        "readonly": false,
        "accessModifier": "public",
        "isCollection": false,
        "function": null,
        "returnType": null,
        "assignValue": null
      }
    },
    "functions": {},
    "methods": {},
    "constructor": {},
    "types": {},
    "variables": {},
    "modules": {},
    "objects": {}
  }
}